name: Auto-sync repo with latest release

on:
  release:
    types: [published]      # ทำงานทุกครั้งที่คุณกด “Publish release”
  workflow_dispatch:        # หรือกด manual ก็ได้

permissions:
  contents: write

jobs:
  update-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get latest release info
        id: get_release
        run: |
          LATEST_RELEASE=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          VERSION=$(echo "$LATEST_RELEASE" | jq -r '.tag_name')
          ASSET_NAME=$(echo "$LATEST_RELEASE" | jq -r '.assets[0].name')
          # ดึงเลข versionCode จากชื่อไฟล์ เช่น VTEC_Unlimit_45.zip -> 45
          VERSION_CODE=$(echo "$ASSET_NAME" | grep -oP '(?<=_)\d+(?=\.zip)' || echo "0")
          echo "MODULE_VERSION=$VERSION"       >> $GITHUB_ENV
          echo "MODULE_VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "ZIP_NAME=$ASSET_NAME"          >> $GITHUB_ENV

      - name: Update module.prop
        run: |
          cp module.prop module.prop.bak
          sed -i "s/^version=.*/version=${{ env.MODULE_VERSION }}/" module.prop
          sed -i "s/^versionCode=.*/versionCode=${{ env.MODULE_VERSION_CODE }}/" module.prop
          cat module.prop

      - name: Update update.json
        run: |
          cat <<EOF > update.json
          {
            "version": "${{ env.MODULE_VERSION }}",
            "versionCode": ${{ env.MODULE_VERSION_CODE }},
            "zipUrl": "https://github.com/${{ github.repository }}/releases/download/${{ env.MODULE_VERSION }}/${{ env.ZIP_NAME }}",
            "changelog": "https://raw.githubusercontent.com/${{ github.repository }}/main/changelog.md"
          }
          EOF
          cat update.json

      - name: Set executable permissions
        run: |
          [ -f "install.sh" ] && chmod +x install.sh || true
          [ -f "uninstall.sh" ] && chmod +x uninstall.sh || true
          find META-INF script common -type f -name "*.sh" -exec chmod +x {} \; 2>/dev/null || true
          find system -type f -exec chmod 644 {} \; 2>/dev/null || true

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --staged --quiet || git commit -m "Sync repo with release ${{ env.MODULE_VERSION }} [skip ci]"
          git push
